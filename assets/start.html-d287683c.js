import{_ as t,n as d,p as i,q as c,s as n,R as e,t as a,$ as l}from"./framework-71306714.js";const o={},r=n("div",{class:"custom-container warning"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8v4"}),n("path",{d:"M12 16h.01"})])]),n("p",{class:"custom-container-title"},"WARNING"),n("p",null,"请结合升级指南进行安装，部分配置需要在 config.json 修改")],-1),u=n("h2",{id:"在-docker-上安装-netaxe",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#在-docker-上安装-netaxe","aria-hidden":"true"},"#"),e(" 在 Docker 上安装 Netaxe")],-1),p=n("p",null,"通过 Docker 进行安装 Netaxe，需要提前在本地安装好 Docker。",-1),v=n("h2",{id:"docker-的安装请参考官方文档",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#docker-的安装请参考官方文档","aria-hidden":"true"},"#"),e(" Docker 的安装请参考官方文档：")],-1),b={href:"https://docs.docker.com/install/linux/docker-ce/ubuntu",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.docker.com/install/linux/docker-ce/debian",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.docker.com/install/linux/docker-ce/centos",target:"_blank",rel:"noopener noreferrer"},h=l(`<h3 id="安装docker-以及-docker-compose" tabindex="-1"><a class="header-anchor" href="#安装docker-以及-docker-compose" aria-hidden="true">#</a> 安装<code>docker</code> 以及 <code>docker-compose</code></h3><details><summary> CentOS （<a href="https://docs.docker.com/engine/install/centos/">查看官方教程</a>） </summary><ol><li><p>卸载老版本 <code>docker</code> 或 <code>docker-engine</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum remove <span class="token function">docker</span> <span class="token punctuation">\\</span>
docker-client <span class="token punctuation">\\</span>
docker-client-latest <span class="token punctuation">\\</span>
docker-common <span class="token punctuation">\\</span>
docker-latest <span class="token punctuation">\\</span>
docker-latest-logrotate <span class="token punctuation">\\</span>
docker-logrotate <span class="token punctuation">\\</span>
docker-engine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>设置仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以下两个二选一，第二个是国内源</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum-config-manager <span class="token punctuation">\\</span>
 --add-repo <span class="token punctuation">\\</span>
 https://download.docker.com/linux/centos/docker-ce.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>安装 <code>docker</code> 引擎</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> docker-ce <span class="token punctuation">\\</span>
docker-ce-cli <span class="token punctuation">\\</span>
containerd.io <span class="token punctuation">\\</span>
docker-buildx-plugin <span class="token punctuation">\\</span>
docker-compose-plugin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行 <code>docker</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></details><details><summary> Ubuntu （<a href="https://docs.docker.com/engine/install/ubuntu/">查看官方教程</a>） </summary><ol><li><p>卸载老版本 <code>docker</code> 或 <code>docker-engine</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> remove <span class="token function">docker</span> docker-engine docker.io containerd runc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>设置仓库</p><ol><li><p>更新 <code>apt</code> 程序包索引并安装依赖</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token punctuation">\\</span>
ca-certificates <span class="token punctuation">\\</span>
<span class="token function">curl</span> <span class="token punctuation">\\</span>
gnupg <span class="token punctuation">\\</span>
lsb-release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>添加 Docker 官方 GPG 密钥</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-m</span> 0755 <span class="token parameter variable">-p</span> /etc/apt/keyrings
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class="token operator">|</span> <span class="token function">sudo</span> gpg <span class="token parameter variable">--dearmor</span> <span class="token parameter variable">-o</span> /etc/apt/keyrings/docker.gpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>设置仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token punctuation">\\</span>
<span class="token string">&quot;deb [arch=<span class="token variable"><span class="token variable">$(</span>dpkg --print-architecture<span class="token variable">)</span></span> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\
<span class="token variable"><span class="token variable">$(</span>lsb_release <span class="token parameter variable">-cs</span><span class="token variable">)</span></span> stable&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/docker.list <span class="token operator">&gt;</span> /dev/null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>安装 <code>docker</code> 引擎</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>运行 <code>apt-get</code> 更新时收到 GPG 错误?</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chmod</span> a+r /etc/apt/keyrings/docker.gpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">sudo</span> <span class="token function">apt-get</span> update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> docker-ce <span class="token punctuation">\\</span>
docker-ce-cli <span class="token punctuation">\\</span>
containerd.io <span class="token punctuation">\\</span>
docker-buildx-plugin <span class="token punctuation">\\</span>
docker-compose-plugin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></details><h2 id="部署平台" tabindex="-1"><a class="header-anchor" href="#部署平台" aria-hidden="true">#</a> 部署平台</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
关闭防火墙：
systemctl stop firewalld.service
systemctl disable firewalld.service 
需要关闭 selinux
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&quot;s/SELINUX=enforcing/SELINUX=disabled/g&quot;</span> /etc/selinux/config
确认是否修改成功
<span class="token function">grep</span> SELINUX /etc/selinux/config
然后重启系统即可
<span class="token function">reboot</span>

<span class="token function">git</span> clone https://gitee.com/iflytek/NetAxe.git

<span class="token builtin class-name">cd</span> NetAxe/install-compose/


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> deploy.sh

等待部署脚本执行完成
使用ip:9980 登录
admin/部署完成输出的初始化密码

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="应用端口规划表" tabindex="-1"><a class="header-anchor" href="#应用端口规划表" aria-hidden="true">#</a> 应用端口规划表</h2><table><thead><tr><th>应用</th><th>前端 web</th><th>后端 controller</th><th>别名</th></tr></thead><tbody><tr><td>微前端主应用</td><td>9980</td><td>-</td><td>-</td></tr><tr><td>基础平台</td><td>32200</td><td>31100</td><td>base</td></tr><tr><td>消息网关</td><td>32201</td><td>31101</td><td>msg-gateway</td></tr><tr><td>告警中心</td><td>32202</td><td>31102</td><td>alert</td></tr><tr><td>IPAM</td><td>32203</td><td>31103</td><td>ipam</td></tr><tr><td>RBAC</td><td>32204</td><td>31104</td><td>rbac</td></tr><tr><td>南向驱动</td><td>32205</td><td>31105</td><td>south-driver</td></tr><tr><td>监控中心</td><td>32206</td><td>31106</td><td>neteye</td></tr><tr><td>可视化指标</td><td>32207</td><td>31107</td><td>metric</td></tr><tr><td>DCN 控制器</td><td>32208</td><td>31108</td><td>dcn</td></tr><tr><td>DCS 控制器</td><td>32208</td><td>31108</td><td>dcs</td></tr><tr><td>工作流引擎</td><td>32209</td><td>31109</td><td>work-flow</td></tr><tr><td>资源平台</td><td>32210</td><td>31110</td><td>cmdb</td></tr><tr><td>私有平台</td><td>32211</td><td>31111</td><td>private</td></tr></tbody></table><h2 id="底层工具端口规划表" tabindex="-1"><a class="header-anchor" href="#底层工具端口规划表" aria-hidden="true">#</a> 底层工具端口规划表</h2><table><thead><tr><th>应用</th><th>端口</th></tr></thead><tbody><tr><td>mongo</td><td>37018</td></tr><tr><td>mongo-express</td><td>37017</td></tr><tr><td>mysql</td><td>36306</td></tr><tr><td>redis</td><td>36379</td></tr><tr><td>rabbitmq</td><td>31672/32672</td></tr><tr><td>nacos</td><td>8848</td></tr><tr><td>pushgateway</td><td>39091</td></tr><tr><td>prometheus</td><td>39090</td></tr></tbody></table>`,10);function g(f,x){const s=d("ExternalLinkIcon");return i(),c("div",null,[r,u,p,v,n("ul",null,[n("li",null,[n("a",b,[e("Ubuntu"),a(s)])]),n("li",null,[n("a",m,[e("Debian"),a(s)])]),n("li",null,[n("a",k,[e("CentOS"),a(s)])])]),h])}const y=t(o,[["render",g],["__file","start.html.vue"]]);export{y as default};
