import{_ as e,p as a,q as n,$ as t}from"./framework-71306714.js";const i={},r=t('<h2 id="foreword" tabindex="-1"><a class="header-anchor" href="#foreword" aria-hidden="true">#</a> foreword</h2><p>The early platform was a single application. With the increasing function and demand, the cost and disadvantage of maintaining a single monolithic application gradually became prominent and reached an intolerable point.</p><p>Every minor feature update forced the entire back-end service to restart, causing a brief loss of front-end interaction.</p><p>The increase of development members, from the front and back end, tools, architecture of one person to more than one division of labor to perform their own duties, a variety of processes, norms, standardization problems have to be considered and solved.</p><h2 id="architecture-design-principle" tabindex="-1"><a class="header-anchor" href="#architecture-design-principle" aria-hidden="true">#</a> Architecture design principle</h2><p>From the perspective of architectural maintainability and standardization, each back-end application should have a relatively consistent code directory structure, consistent configuration load specification, and consistent message bus configuration.</p><p>All microservice applications should be easy to deploy, repeatable functional modules (repeatable, simplified deployment steps)</p><p>Generic API endpoints.</p><h2 id="technical-architecture-diagram" tabindex="-1"><a class="header-anchor" href="#technical-architecture-diagram" aria-hidden="true">#</a> Technical architecture diagram</h2><h2 id="back-end-technology-selection" tabindex="-1"><a class="header-anchor" href="#back-end-technology-selection" aria-hidden="true">#</a> Back-end technology selection</h2><h2 id="front-end-technology-selection" tabindex="-1"><a class="header-anchor" href="#front-end-technology-selection" aria-hidden="true">#</a> Front-end technology selection</h2>',11),o=[r];function c(d,s){return a(),n("div",null,o)}const l=e(i,[["render",c],["__file","introduce.html.vue"]]);export{l as default};
